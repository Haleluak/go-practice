// Code generated by protoc-gen-go. DO NOT EDIT.
// source: student.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	student.proto

It has these top-level messages:
	Student
	Response
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Student struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age         int32  `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *Student) Reset()                    { *m = Student{} }
func (m *Student) String() string            { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()               {}
func (*Student) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Student) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Student) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Student) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Response struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Student)(nil), "main.Student")
	proto.RegisterType((*Response)(nil), "main.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Server1 service

type Server1Client interface {
	// API1 is api for service
	API1(ctx context.Context, in *Student, opts ...grpc.CallOption) (*Response, error)
}

type server1Client struct {
	cc *grpc.ClientConn
}

func NewServer1Client(cc *grpc.ClientConn) Server1Client {
	return &server1Client{cc}
}

func (c *server1Client) API1(ctx context.Context, in *Student, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/main.Server1/API1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Server1 service

type Server1Server interface {
	// API1 is api for service
	API1(context.Context, *Student) (*Response, error)
}

func RegisterServer1Server(s *grpc.Server, srv Server1Server) {
	s.RegisterService(&_Server1_serviceDesc, srv)
}

func _Server1_API1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Student)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Server1Server).API1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Server1/API1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Server1Server).API1(ctx, req.(*Student))
	}
	return interceptor(ctx, in, info, handler)
}

var _Server1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Server1",
	HandlerType: (*Server1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "API1",
			Handler:    _Server1_API1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "student.proto",
}

func init() { proto.RegisterFile("student.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x31, 0x8b, 0x83, 0x40,
	0x10, 0x85, 0xcf, 0xd3, 0x3b, 0x75, 0x0e, 0x8f, 0x30, 0xd5, 0x92, 0x4a, 0x6c, 0x62, 0x25, 0x68,
	0xfa, 0x40, 0xca, 0x74, 0xc9, 0xfa, 0x0b, 0x8c, 0x0e, 0xc1, 0xc2, 0x5d, 0xd9, 0x59, 0xf3, 0xfb,
	0x83, 0x6b, 0x16, 0xd2, 0xbd, 0xef, 0xcd, 0xf0, 0xe6, 0x0d, 0x64, 0x6c, 0x97, 0x81, 0x94, 0xad,
	0x66, 0xa3, 0xad, 0xc6, 0x68, 0xea, 0x46, 0x55, 0xdc, 0x20, 0x6e, 0x37, 0x1b, 0x11, 0x22, 0xd5,
	0x4d, 0x24, 0x82, 0x3c, 0x28, 0x53, 0xe9, 0x34, 0xee, 0x20, 0xec, 0x1e, 0x24, 0xbe, 0xf3, 0xa0,
	0xfc, 0x91, 0xab, 0xc4, 0x1c, 0xfe, 0x06, 0xe2, 0xde, 0x8c, 0xb3, 0x1d, 0xb5, 0x12, 0xa1, 0x5b,
	0xfe, 0xb4, 0x8a, 0x13, 0x24, 0x92, 0x78, 0xd6, 0x8a, 0x09, 0x05, 0xc4, 0xbc, 0xf4, 0x3d, 0x31,
	0xbb, 0xd8, 0x44, 0x7a, 0x5c, 0x27, 0x13, 0x31, 0xfb, 0xf4, 0x54, 0x7a, 0x6c, 0x1a, 0x88, 0x5b,
	0x32, 0x4f, 0x32, 0x35, 0x1e, 0x20, 0x3a, 0x5f, 0x2f, 0x35, 0x66, 0xd5, 0x5a, 0xb6, 0x7a, 0x37,
	0xdd, 0xff, 0x6f, 0xe8, 0xaf, 0x14, 0x5f, 0xf7, 0x5f, 0xf7, 0xd3, 0xf1, 0x15, 0x00, 0x00, 0xff,
	0xff, 0x23, 0x1e, 0x42, 0x66, 0xe4, 0x00, 0x00, 0x00,
}
